from __future__ import annotations

import sys

from dotenv import load_dotenv
from google import genai


load_dotenv()


def generate(prompt: str, model: str = "gemini-1.5-flash") -> str:
    """Return text generated by the specified Google model for ``prompt``."""
    client = genai.Client()
    response = client.models.generate_content(model=model, contents=[prompt])
    return response.text


def main() -> None:
    """Read a prompt from stdin and print the model's response."""
    if sys.stdin.isatty():
        prompt = input("Enter a prompt: ")
    else:
        prompt = sys.stdin.read().strip()
    try:
        print(generate(prompt))
    except Exception as exc:  # pragma: no cover - network/auth failures
        print(f"Request failed: {exc}")


if __name__ == "__main__":
    main()
